#!/bin/bash

if [ -z "$DOCKER_COMPOSE_ENV" ]; then
    DOCKER_COMPOSE_ENV='docker-compose.dev.yml'
fi

echo "***********************************************************************"
echo "*******      Using docker compose: $DOCKER_COMPOSE_ENV      ********"
echo "***********************************************************************"

if [ "$1" = 'init' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV build
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV up -d --no-recreate
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV run --rm web init $(docker-machine ip dev),lsg.com
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV run --rm web createsuperuser

elif [ "$1" = 'buildup' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV stop web
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV stop celery
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV rm web
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV rm celery
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV build
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV up -d --no-recreate

elif [ "$1" = 'rundev' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV stop web
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV run --rm --service-ports web devrun

elif [ "$1" = 'runnginx' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV stop web
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV up -d --no-recreate

elif [ "$1" = 'runnginxinit' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV stop web
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV run --rm web init $(docker-machine ip dev)
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV up -d --no-recreate

elif [ "$1" = 'shell' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV run --rm web shell

elif [ "$1" = 'dbshell' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV run --rm web dbshell

elif [ "$1" = 'webbashrun' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV run --rm web bash

elif [ "$1" = 'webbash' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV exec web bash

elif [ "$1" = 'celerybash' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV exec celery bash

elif [ "$1" = 'celeryrestart' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV restart celery

elif [ "$1" = 'createsuperuser' ]; then
    docker-compose -f docker-compose.base.yml -f $DOCKER_COMPOSE_ENV run --rm web createsuperuser

elif [ "$1" = 'setupelx' ]; then
    docker-machine stop dev
    VBoxManage sharedfolder add dev --name "erogehi" --hostpath "/home/erogehi/"
    docker-machine start dev
    docker-machine ssh dev 'sudo mkdir --parents /home/erogehi'
    docker-machine ssh dev 'sudo mount -t vboxsf userhome /home/erogehi'
    
else
    echo
    echo "Usage: ./lsg (init | buildup | rundev | runnginx | runnginxinit | shell | dbshell | webbash | webbashrun | celerybash | celeryrestart | createsuperuser | setupelx)"
    echo
fi

